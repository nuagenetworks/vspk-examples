---
- hosts: localhost

#
# Configure to match your environment
#
  vars:
    nuage_auth:
      api_username: csproot
      api_password: csproot
      api_enterprise: csp
      api_url: https://localhost:8443
    enterprise_name: Ansible-Test
    enterprise_new_name: Ansible-Updated-Test
    enterprise_admin_username: ansible-admin
    enterprise_admin_password: ansible
    enterprise_admin_new_password: ansible_new
    enterprise_admin_first_name: Ansible
    enterprise_admin_last_name: Admin
    enterprise_admin_email: ansible@localhost.local

  tasks:
  # Creating a new enterprise
  - name: Create Enterprise
    connection: local
    nuage_vspk:
      auth: "{{ nuage_auth }}"
      type: Enterprise
      state: present
      properties:
        name: "{{ enterprise_name }}-basic"
    register: nuage_enterprise
  
  # Checking if an Enterprise with the new name already exists
  - name: Check if an Enterprise exists with the new name
    connection: local
    nuage_vspk:
      auth: "{{ nuage_auth }}"
      type: Enterprise
      command: find
      properties:
        name: "{{ enterprise_new_name }}-basic"
    ignore_errors: yes
    register: nuage_check_enterprise
  
  # Updating an enterprise's name
  - name: Update Enterprise name
    connection: local
    nuage_vspk:
      auth: "{{ nuage_auth }}"
      type: Enterprise
      id: "{{ nuage_enterprise.id }}"
      state: present
      properties:
        name: "{{ enterprise_new_name }}-basic"
    when: nuage_check_enterprise | failed
  
  # Creating a User in an Enterprise
  - name: Create admin user
    connection: local
    nuage_vspk:
      auth: "{{ nuage_auth }}"
      type: User
      parent_id: "{{ nuage_enterprise.id }}"
      parent_type: Enterprise
      state: present
      match_filter: "userName == 'ansible-admin'"
      properties:
        email: "ansible@localhost.local"
        first_name: "Ansible"
        last_name: "Admin"
        password: "ansible-password"
        user_name: "ansible-admin"
    register: nuage_user
  
  # Updating password for User
  # Best to ignore errors in this case, because Nuage API does not allow
  # a password update in case the existing password is provided
  - name: Update admin password
    connection: local
    nuage_vspk:
      auth: "{{ nuage_auth }}"
      type: User
      id: "{{ nuage_user.id }}"
      command: change_password
      properties:
        password: "ansible-new-password"
    ignore_errors: yes
  
  # Finding a group in an enterprise
  - name: Find Administrators group in Enterprise
    connection: local
    nuage_vspk:
      auth: "{{ nuage_auth }}"
      type: Group
      parent_id: "{{ nuage_enterprise.id }}"
      parent_type: Enterprise
      command: find
      properties:
        name: "Administrators"
    register: nuage_group
  
  # Assign the user to the group
  - name: Assign admin user to administrators
    connection: local
    nuage_vspk:
      auth: "{{ nuage_auth }}"
      type: User
      id: "{{ nuage_user.id }}"
      parent_id: "{{ nuage_group.id }}"
      parent_type: Group
      state: present
  
  # Creating multiple DomainTemplates
  - name: Create multiple DomainTemplates
    connection: local
    nuage_vspk:
      auth: "{{ nuage_auth }}"
      type: DomainTemplate
      parent_id: "{{ nuage_enterprise.id }}"
      parent_type: Enterprise
      state: present
      properties:
        name: "{{ item }}"
        description: "Created by Ansible"
    with_items:
      - "Template-1"
      - "Template-2"
  
  # Finding all DomainTemplates
  - name: Fetching all DomainTemplates
    connection: local
    nuage_vspk:
      auth: "{{ nuage_auth }}"
      type: DomainTemplate
      parent_id: "{{ nuage_enterprise.id }}"
      parent_type: Enterprise
      command: find
    register: nuage_domain_templates
  
  # Deleting all DomainTemplates
  - name: Deleting all found DomainTemplates
    connection: local
    nuage_vspk:
      auth: "{{ nuage_auth }}"
      type: DomainTemplate
      state: absent
      id: "{{ item.ID }}"
    with_items: "{{ nuage_domain_templates.entities }}"
    when: nuage_domain_templates.entities is defined
  
  # Unassign user from group
  - name: Unassign admin user to administrators
    connection: local
    nuage_vspk:
      auth: "{{ nuage_auth }}"
      type: User
      id: "{{ nuage_user.id }}"
      parent_id: "{{ nuage_group.id }}"
      parent_type: Group
      state: absent
  
  # Deleting an enterprise
  - name: Delete Enterprise
    connection: local
    nuage_vspk:
      auth: "{{ nuage_auth }}"
      type: Enterprise
      id: "{{ nuage_enterprise.id }}"
      state: absent
